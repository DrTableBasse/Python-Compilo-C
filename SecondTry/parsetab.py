
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE ID LBRACE LPAREN MINUS NUMBER PLUS RBRACE RPAREN SEMI TIMESprogram : function_definitionfunction_definition : ID ID LPAREN RPAREN LBRACE statement_list RBRACEstatement_list : statement_list statement\n                      | statementstatement : expression SEMI\n                 | return_statement SEMIreturn_statement : ID expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,3,7,8,9,10,17,18,19,20,21,22,23,],[3,4,8,14,8,-4,-3,-5,14,14,14,14,-6,]),'$end':([1,2,16,],[0,-1,-2,]),'LPAREN':([4,],[5,]),'RPAREN':([5,],[6,]),'LBRACE':([6,],[7,]),'NUMBER':([7,8,9,10,17,18,19,20,21,22,23,],[13,13,13,-4,-3,-5,13,13,13,13,-6,]),'SEMI':([8,11,12,13,14,15,24,25,26,27,],[-13,18,23,-12,-13,-7,-8,-9,-10,-11,]),'PLUS':([8,11,13,14,15,24,25,26,27,],[-13,19,-12,-13,19,19,19,19,19,]),'MINUS':([8,11,13,14,15,24,25,26,27,],[-13,20,-12,-13,20,20,20,20,20,]),'TIMES':([8,11,13,14,15,24,25,26,27,],[-13,21,-12,-13,21,21,21,21,21,]),'DIVIDE':([8,11,13,14,15,24,25,26,27,],[-13,22,-12,-13,22,22,22,22,22,]),'RBRACE':([9,10,17,18,23,],[16,-4,-3,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_definition':([0,],[2,]),'statement_list':([7,],[9,]),'statement':([7,9,],[10,17,]),'expression':([7,8,9,19,20,21,22,],[11,15,11,24,25,26,27,]),'return_statement':([7,9,],[12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_definition','program',1,'p_program','parser.py',5),
  ('function_definition -> ID ID LPAREN RPAREN LBRACE statement_list RBRACE','function_definition',7,'p_function_definition','parser.py',9),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',13),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',14),
  ('statement -> expression SEMI','statement',2,'p_statement','parser.py',21),
  ('statement -> return_statement SEMI','statement',2,'p_statement','parser.py',22),
  ('return_statement -> ID expression','return_statement',2,'p_return_statement','parser.py',26),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',30),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',31),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',32),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',33),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',37),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',41),
]
