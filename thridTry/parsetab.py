
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INT LBRACE LPAREN MAIN NUMBER PRINTF RBRACE RETURN RPAREN SEMICOLON STRINGprogram : INT MAIN LPAREN RPAREN LBRACE statements RBRACEstatements : statement\n                  | statements statementstatement : PRINTF LPAREN STRING RPAREN SEMICOLON\n                 | RETURN NUMBER SEMICOLON'
    
_lr_action_items = {'INT':([0,],[2,]),'$end':([1,11,],[0,-1,]),'MAIN':([2,],[3,]),'LPAREN':([3,9,],[4,13,]),'RPAREN':([4,15,],[5,17,]),'LBRACE':([5,],[6,]),'PRINTF':([6,7,8,12,16,18,],[9,9,-2,-3,-5,-4,]),'RETURN':([6,7,8,12,16,18,],[10,10,-2,-3,-5,-4,]),'RBRACE':([7,8,12,16,18,],[11,-2,-3,-5,-4,]),'NUMBER':([10,],[14,]),'STRING':([13,],[15,]),'SEMICOLON':([14,17,],[16,18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([6,],[7,]),'statement':([6,7,],[8,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE','program',7,'p_program','main.py',46),
  ('statements -> statement','statements',1,'p_statements','main.py',50),
  ('statements -> statements statement','statements',2,'p_statements','main.py',51),
  ('statement -> PRINTF LPAREN STRING RPAREN SEMICOLON','statement',5,'p_statement','main.py',58),
  ('statement -> RETURN NUMBER SEMICOLON','statement',3,'p_statement','main.py',59),
]
