Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statement -> PRINTF LPAREN STRING RPAREN SEMICOLON
Rule 5     statement -> RETURN NUMBER SEMICOLON

Terminals, with rules where they appear

INT                  : 1
LBRACE               : 1
LPAREN               : 1 4
MAIN                 : 1
NUMBER               : 5
PRINTF               : 4
RBRACE               : 1
RETURN               : 5
RPAREN               : 1 4
SEMICOLON            : 4 5
STRING               : 4
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 2 3
statements           : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INT MAIN LPAREN RPAREN LBRACE statements RBRACE

    INT             shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INT . MAIN LPAREN RPAREN LBRACE statements RBRACE

    MAIN            shift and go to state 3


state 3

    (1) program -> INT MAIN . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 4


state 4

    (1) program -> INT MAIN LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 5


state 5

    (1) program -> INT MAIN LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 6


state 6

    (1) program -> INT MAIN LPAREN RPAREN LBRACE . statements RBRACE
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (5) statement -> . RETURN NUMBER SEMICOLON

    PRINTF          shift and go to state 9
    RETURN          shift and go to state 10

    statements                     shift and go to state 7
    statement                      shift and go to state 8

state 7

    (1) program -> INT MAIN LPAREN RPAREN LBRACE statements . RBRACE
    (3) statements -> statements . statement
    (4) statement -> . PRINTF LPAREN STRING RPAREN SEMICOLON
    (5) statement -> . RETURN NUMBER SEMICOLON

    RBRACE          shift and go to state 11
    PRINTF          shift and go to state 9
    RETURN          shift and go to state 10

    statement                      shift and go to state 12

state 8

    (2) statements -> statement .

    RBRACE          reduce using rule 2 (statements -> statement .)
    PRINTF          reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)


state 9

    (4) statement -> PRINTF . LPAREN STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 13


state 10

    (5) statement -> RETURN . NUMBER SEMICOLON

    NUMBER          shift and go to state 14


state 11

    (1) program -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 1 (program -> INT MAIN LPAREN RPAREN LBRACE statements RBRACE .)


state 12

    (3) statements -> statements statement .

    RBRACE          reduce using rule 3 (statements -> statements statement .)
    PRINTF          reduce using rule 3 (statements -> statements statement .)
    RETURN          reduce using rule 3 (statements -> statements statement .)


state 13

    (4) statement -> PRINTF LPAREN . STRING RPAREN SEMICOLON

    STRING          shift and go to state 15


state 14

    (5) statement -> RETURN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 16


state 15

    (4) statement -> PRINTF LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 17


state 16

    (5) statement -> RETURN NUMBER SEMICOLON .

    RBRACE          reduce using rule 5 (statement -> RETURN NUMBER SEMICOLON .)
    PRINTF          reduce using rule 5 (statement -> RETURN NUMBER SEMICOLON .)
    RETURN          reduce using rule 5 (statement -> RETURN NUMBER SEMICOLON .)


state 17

    (4) statement -> PRINTF LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 18


state 18

    (4) statement -> PRINTF LPAREN STRING RPAREN SEMICOLON .

    RBRACE          reduce using rule 4 (statement -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    PRINTF          reduce using rule 4 (statement -> PRINTF LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 4 (statement -> PRINTF LPAREN STRING RPAREN SEMICOLON .)

